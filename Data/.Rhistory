divisions <- scan("divisions.txt")
divisions
hist(divisions)
library(tidyverse)
gplot(divisions)
qplot(divisions)
qplot(divisions) + xlab("Distance from QC")
qplot(divisions) + xlab("Relative distance along the root axis")
qplot(divisions) + xlab("Relative distance along the root axis", fill="blue")
qplot(divisions) + xlab("Relative distance along the root axis", color="blue")
qplot(divisions, fill="blue") + xlab("Relative distance along the root axis")
qplot(divisions, aes(fill="blue")) + xlab("Relative distance along the root axis")
ggplot(divisions) +   xlab("Relative distance along the root axis")
qplot(divisions, fill=I("blue")) + xlab("Relative distance along the root axis")
qplot(divisions, fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis")
theme_set(theme_bw())
qplot(divisions, fill=I("lightblue"), color=I("black"), stat="density") + xlab("Relative distance along the root axis") 
qplot(divisions, fill=I("lightblue"), color=I("black"), geom="density") + xlab("Relative distance along the root axis") 
qplot(divisions, fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis")
qplot(divisions, fill=I("lightblue"), color=I("black"), geom="density") + xlab("Relative distance along the root axis") + theme
qplot(divisions, fill=I("lightblue"), color=I("black"), geom="density") + xlab("Relative distance along the root axis") + theme(text=element_text(size=24))
qplot(divisions, fill=I("lightblue"), color=I("black"), geom="density") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black"), geom="density") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qlot(divisions/max(divisions), fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black"), geom="density") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black"), geom="bar") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/sum(divisions), fill=I("lightblue"), color=I("black"), geom="bar") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/sum(divisions), aes(y = (..count..)/sum(..count..)), fill=I("lightblue"), color=I("black"), geom="bar") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/sum(divisions), fill=I("lightblue"), color=I("black"), geom="bar") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(a, aes() fill=I("lightblue"), color=I("black"), geom="bar") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24)) + scale_y_continuous(labels = scales::percent)
qplot(divisions/max(divisions), fill=I("lightblue"), color=I("black")) + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24)) 
divisions
divisions <- data.frame(Position=divisions, Value = 1)
aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mean)
aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sum)
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sum)
a$Value <- a$Value / max(a$Value)
qplot(a, aes(Potion, Value), fill=I("lightblue"), color=I("black"), geom="bar") + xlab("Relative distance along the root axis") + ylab("Density of cell divisions") +  theme(text=element_text(size=24))
a
ggplot(a) + geom_bar(aes(Position, Value)))
ggplot(a) + geom_bar(aes(Position, Value))
ggplot(a) + geom_bar(aes(Value))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sum)
a$Value <- a$Value / sum(a$Value)
ggplot(a) + geom_bar(aes(Value))
a
aa <- divisions
divisions
ggplot(divisions) + geom_bar(aes(Position))
a
ggplot(a) + geom_point(aes(Position,Value))
ggplot(divisions) + geom_hist(aes(Position))
ggplot(divisions) + geom_histogram(aes(Position))
hist(divisions$Position)
hist(divisions$Position, freq=F)
ggplot(a) +  geom_bar(aes(Position, Value))
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity")
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sum)
a
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity")
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", filll="lightblue")
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue")
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black")
a
a$Position <- seq(0, 1, length.out=30)
a
a$Value <- a$Value / sum(a$Value)
a
Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(24))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24))
ggsave("Divisions.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=20), axis.text = element_text(size=18))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18))
ggsave("Divisions.png")
ggsave("Divisions.png", width=7, height=7)
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18), plot.margin=c(0.1, 0.1 , 0.1 ,0.1))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18), plot.margin=unit(0.1, 0.1 , 0.1 ,0.1))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18), plot.margin=unit(c(0.1, 0.1 , 0.1 ,0.1)))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18), plot.margin=unit(c(1,1,1,1), "cm"))
ggsave("Divisions.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18), plot.margin=unit(c(2,2,2,2), "cm"))
ggsave("Divisions.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18), plot.margin=unit(c(3,3,3,3), "cm"))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18)))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=18))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Frequency of Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("Divisions.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("Divisions.png")
r <- read.csv("growth_rate.txt")
head(r)
r <- read.csv("growth_rate.txt", sep="\t")
head(r)
r <- read.csv("growth_rate.txt", sep=" ")
head(r)
a <- aggregate(GR ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), c(mean, sd))
a <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), c(mean, sd))
a <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mean)
head(a)
b <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sd)
head(b)
GR <- a
GR$sd <- b$GR
a$Position <- seq(0, 1, length.out=30)
a$Position <- seq(0, 1, length.out=27)
GR$Position <- seq(0, 1, length.out=27)
GR
d <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), count)
d <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), length)
d
ggplot(GR) + geom_point(aes(Position, GR))
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd))
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
b <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mad)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
GR$sd <- b$GR
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
b
b <- aggregate(GR ~ Position, transform(r, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sd)
b
GR$sd <- b$GR
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
b <- aggregate(GR ~ Position, transform(r[r$Time > 10, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sd)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
GR$sd <- b$GR
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
r
tail(r)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
a
a <- aggregate(GR ~ Position, transform(r[r$Time > 20, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
a
plot(a$GR)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
plot(a$GR)
a <- aggregate(GR ~ Position, transform(r[r$Time > 10, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
plot(a$GR)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), length)
a
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
b
GR <- data.frame(Position = seq(0, 1, length.out=54), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
library(tidyverse)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 20))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 20))), sd)
GR <- data.frame(Position = seq(0, 1, length.out=54), GR = a$GR, sd= b$GR)
GR <- data.frame(Position = seq(0, 1, length.out=13), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), median)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mad)
GR <- data.frame(Position = seq(0, 1, length.out=13), GR = a$GR, sd= b$GR)
GR <- data.frame(Position = seq(0, 1, length.out=27), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sd)
GR <- data.frame(Position = seq(0, 1, length.out=27), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
GR <- data.frame(Position = seq(0, 1, length.out=27), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
GR <- data.frame(Position = seq(0, 1, length.out=54), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
theme_set(theme_bw())
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, color="orange") 
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="orange") 
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="darkorange") 
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") 
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
GR
r
a
GR
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=8) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[8,]0) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[8,]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[8,1]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[7,1]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[6,1]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[6,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("GR.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Division[6,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[6,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("Divisions.png")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("GR.png")
library(ggplot2)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
theme_set(theme_bw())
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=24))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
options(repr.plot.width = 15, repr.plot.height = 10, repr.plot.res = 100)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("GR.png")
ls
ls()
head(r)
auxin <- read.csv("auxin.txt")
head(auxin
)
a <- aggregate(Auxin ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
b <- aggregate(Auxin ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
Auxin <- data.frame(Position = seq(0, 1, length.out=54), Auxin = a$Auxin, sd= b$Auxin)
Auxin
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
b <- aggregate(Auxin ~ Position, transform(Auxin[Auxin$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
b <- aggregate(Auxin ~ Position, transform(auxin[auxin$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
a <- aggregate(Auxin ~ Position, transform(auxin[auxin$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
Auxin <- data.frame(Position = seq(0, 1, length.out=54), Auxin = a$Auxin, sd= b$Auxin)
Auxin <- data.frame(Position = seq(0, 1, length.out=58), Auxin = a$Auxin, sd= b$Auxin)
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Auxin Concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Auxin.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Divisions.png")
divisions
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sum)
a
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black")
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 15))), sum)
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black")
a$Position <- seq(0, 1, length.out=length(a))
a
a$Position <- seq(0, 1, length.out=nriw(a))
a$Position <- seq(0, 1, length.out=nrow(a))
a$Value <- a$Value / sum(a$Value)
a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 12))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 20))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 3))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 8))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[3,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Divisions.png")
ggsave("Divisions.svg")
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Auxin Concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Auxin.svg")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("GR.svg")
PINs <- read.csv("PINs.txt", sep="\t")
head(PINs)
a <- sapply(PINs, function(x) x / max(x))
head(a)
a <- sapply(PINs, function(x) x / max(x, na.rm=T))
head(a)
PINs <- a
PINs <- na.omit(a)
matplot(PINs)
apply(PINs, 1, function(x) c(mean(x), sd(x)) )
a<-t(apply(PINs, 1, function(x) c(mean(x), sd(x)) ) )
head(a)
colnames(a) <- c("mean", "sd")
PINs_summary <- a
library(ggplot)
library(ggplot2)
ggplot(PINs_summary) + geom_pointrange(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd))
PINs_summary <- as.data.frame(a)
ggplot(PINs_summary) + geom_pointrange(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd))
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd))
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd)) + geom_line(aes(x=1:nrow(PINs_summary), y=mean))
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")
theme_set(theme_bw())
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")
ggplot(PINs_summary) + geom_ribbon(aes(x=seq(0, 1:nrow(PINs_summary), by=0.01), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=seq(0, nrow(PINs_summary), by=0.01), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
seq(0, nrow(PINs_summary), by=0.01)
seq(from=0, by=0.01, length.out=49601)
496 *0.01
PINs <- read.csv("PINs.txt", sep="\t")
PINs <- sapply(PINs, function(x) x / max(x, na.rm=T))
PINs 
PINs_summary <- t(apply(PINs, 1, function(x) c(mean(x), sd(x)) ) )
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x), sd=sd(x)) ) )
heaad(PINs_summary)
head(PINs_summary)
dim(PINs_summary)
tail(PINs_summary)
PINs_summary <- na.omit(PINs_summary)
dim(PINs_summary)
ggplot(PINs_summary) + geom_ribbon(aes(x=seq(0, nrow(PINs_summary), by=0.01), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary <- as.data.frame(PINs_summary)
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) )
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) ) %>% as.data.frame()
library(tidyverse)
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) ) %>% as.data.frame()
PINs_summary
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) ) %>% na.omit() %>% as.data.frame()
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary
PINs_summary <- t(apply(PINs %>% na.omit(), 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) )  %>% as.data.frame()
PINs_summary
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary
head(PINs_summary)
plot(PINs_summary$mean)
plot(PINs_summary$sd)
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:PINs_summary)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), color="red", size=2)  + xlab("Time after cell division") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5)  + xlab("Time after cell division") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("PINs.svg")
ggsave("PINs.svg")
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("PINs.svg")
reflux <- read.csv("reflux.csv")
head(reflux)
reflux <- read.csv("reflux.csv", sep="\t")
head(reflux)
library(ggplot2)
reflux_melted <- melt(reflux)
library(ggplot2)
reflux_melted <- melt(reflux)
library(reshape2)
reflux_melted <- melt(reflux)
head(reflux_melted)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
library(tidyverse)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
reflux$Time <- 1:nrow(reflux)
reflux_melted <- melt(reflux)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
head(reflux_melted)
reflux_melted <- melt(reflux, id.vars="Time")
head(reflux_melted)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(Time, value))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(Time, value)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(Time, value))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(Time, value, color=variable))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time, value, color=variable))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(Time, value, color=variable))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time, value, color=variable))
theme_set(theme_bw())
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank())
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank()) + scale_color_discrete(labels = c("Reflux", "No Reflux"))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(0.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(0.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(0.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(2.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(4, 4) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(1, 1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box=element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.rect=element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background= = element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggsave("Reflux_GR.svg")
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"), colors=c("yellow", "green"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"), values=c("yellow", "green"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_manual(labels = c("No Reflux", "Reflux"), values=c("yellow", "green"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_manual(labels = c("No Reflux", "Reflux"), values=c("blue", "lightblue"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggsave("Auxin_GR.svg")
