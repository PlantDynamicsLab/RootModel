b
GR <- data.frame(Position = seq(0, 1, length.out=54), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
library(tidyverse)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 20))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 20))), sd)
GR <- data.frame(Position = seq(0, 1, length.out=54), GR = a$GR, sd= b$GR)
GR <- data.frame(Position = seq(0, 1, length.out=13), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), median)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mad)
GR <- data.frame(Position = seq(0, 1, length.out=13), GR = a$GR, sd= b$GR)
GR <- data.frame(Position = seq(0, 1, length.out=27), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sd)
GR <- data.frame(Position = seq(0, 1, length.out=27), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
a <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
b <- aggregate(GR ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
GR <- data.frame(Position = seq(0, 1, length.out=27), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
GR <- data.frame(Position = seq(0, 1, length.out=54), GR = a$GR, sd= b$GR)
ggplot(GR) + geom_point(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5)
theme_set(theme_bw())
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, color="orange")
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="orange")
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="darkorange")
ggplot(GR) + geom_line(aes(Position, GR)) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
GR
r
a
GR
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=8) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[8,]0) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[8,]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[8,1]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[7,1]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[6,1]) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[6,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("GR.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") + xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Division[6,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[6,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("Divisions.png")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggsave("GR.png")
library(ggplot2)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
theme_set(theme_bw())
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=24))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
options(repr.plot.width = 15, repr.plot.height = 10, repr.plot.res = 100)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("GR.png")
ls
ls()
head(r)
auxin <- read.csv("auxin.txt")
head(auxin
)
a <- aggregate(Auxin ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
b <- aggregate(Auxin ~ Position, transform(r[r$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
Auxin <- data.frame(Position = seq(0, 1, length.out=54), Auxin = a$Auxin, sd= b$Auxin)
Auxin
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
b <- aggregate(Auxin ~ Position, transform(Auxin[Auxin$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
b <- aggregate(Auxin ~ Position, transform(auxin[auxin$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sd)
a <- aggregate(Auxin ~ Position, transform(auxin[auxin$Time > 15, ], Position = cut(Position, breaks = seq(-1000, max(Position), 5))), mean)
Auxin <- data.frame(Position = seq(0, 1, length.out=54), Auxin = a$Auxin, sd= b$Auxin)
Auxin <- data.frame(Position = seq(0, 1, length.out=58), Auxin = a$Auxin, sd= b$Auxin)
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=24), axis.text = element_text(size=14))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Auxin Concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Auxin.png")
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Divisions.png")
divisions
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 5))), sum)
a
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black")
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 15))), sum)
ggplot(a) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black")
a$Position <- seq(0, 1, length.out=length(a))
a
a$Position <- seq(0, 1, length.out=nriw(a))
a$Position <- seq(0, 1, length.out=nrow(a))
a$Value <- a$Value / sum(a$Value)
a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[5,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 10))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 12))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 20))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 3))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
a <- aggregate(Value ~ Position, transform(divisions, Position = cut(Position, breaks = seq(-1000, max(Position), 8))), sum)
a$Position <- seq(0, 1, length.out=nrow(a)); a$Value <- a$Value / sum(a$Value); Divisions <- a
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[2,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[3,1], linetype=2) +  xlab("Relative position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Divisions.png")
ggsave("Divisions.svg")
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Auxin Concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("Auxin.svg")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("GR.svg")
PINs <- read.csv("PINs.txt", sep="\t")
head(PINs)
a <- sapply(PINs, function(x) x / max(x))
head(a)
a <- sapply(PINs, function(x) x / max(x, na.rm=T))
head(a)
PINs <- a
PINs <- na.omit(a)
matplot(PINs)
apply(PINs, 1, function(x) c(mean(x), sd(x)) )
a<-t(apply(PINs, 1, function(x) c(mean(x), sd(x)) ) )
head(a)
colnames(a) <- c("mean", "sd")
PINs_summary <- a
library(ggplot)
library(ggplot2)
ggplot(PINs_summary) + geom_pointrange(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd))
PINs_summary <- as.data.frame(a)
ggplot(PINs_summary) + geom_pointrange(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd))
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd))
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd)) + geom_line(aes(x=1:nrow(PINs_summary), y=mean))
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")
theme_set(theme_bw())
ggplot(PINs_summary) + geom_ribbon(aes(x=1:nrow(PINs_summary), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")
ggplot(PINs_summary) + geom_ribbon(aes(x=seq(0, 1:nrow(PINs_summary), by=0.01), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=seq(0, nrow(PINs_summary), by=0.01), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
seq(0, nrow(PINs_summary), by=0.01)
seq(from=0, by=0.01, length.out=49601)
496 *0.01
PINs <- read.csv("PINs.txt", sep="\t")
PINs <- sapply(PINs, function(x) x / max(x, na.rm=T))
PINs
PINs_summary <- t(apply(PINs, 1, function(x) c(mean(x), sd(x)) ) )
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x), sd=sd(x)) ) )
heaad(PINs_summary)
head(PINs_summary)
dim(PINs_summary)
tail(PINs_summary)
PINs_summary <- na.omit(PINs_summary)
dim(PINs_summary)
ggplot(PINs_summary) + geom_ribbon(aes(x=seq(0, nrow(PINs_summary), by=0.01), y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary <- as.data.frame(PINs_summary)
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) )
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) ) %>% as.data.frame()
library(tidyverse)
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) ) %>% as.data.frame()
PINs_summary
PINs_summary <- t(apply(PINs, 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) ) %>% na.omit() %>% as.data.frame()
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary
PINs_summary <- t(apply(PINs %>% na.omit(), 1, function(x) c(mean=mean(x, na.rm=T), sd=sd(x, na.rm=T)) ) )  %>% as.data.frame()
PINs_summary
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:675)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=1:nrow(PINs_summary), y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
PINs_summary
head(PINs_summary)
plot(PINs_summary$mean)
plot(PINs_summary$sd)
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:PINs_summary)/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), color="red")  + xlab("Time after cell division") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), color="red", size=2)  + xlab("Time after cell division") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), color="red", alpha=0.5)  + xlab("Time after cell division") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("PINs.svg")
ggsave("PINs.svg")
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggsave("PINs.svg")
reflux <- read.csv("reflux.csv")
head(reflux)
reflux <- read.csv("reflux.csv", sep="\t")
head(reflux)
library(ggplot2)
reflux_melted <- melt(reflux)
library(ggplot2)
reflux_melted <- melt(reflux)
library(reshape2)
reflux_melted <- melt(reflux)
head(reflux_melted)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
library(tidyverse)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
reflux$Time <- 1:nrow(reflux)
reflux_melted <- melt(reflux)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
head(reflux_melted)
reflux_melted <- melt(reflux, id.vars="Time")
head(reflux_melted)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(1:nrow(reflux), value))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(Time, value))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(Time, value)
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(Time, value))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(Time, value, color=variable))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time, value, color=variable))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_line(aes(Time, value, color=variable))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time, value, color=variable))
theme_set(theme_bw())
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank())
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank()) + scale_color_discrete(labels = c("Reflux", "No Reflux"))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable)) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(0.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(0.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(0.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(2.5,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(4, 4) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(1, 1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box=element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.rect=element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background= = element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black") ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("GR.NoReflux", "GR.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggsave("Reflux_GR.svg")
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"), colors=c("yellow", "green"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_discrete(labels = c("No Reflux", "Reflux"), values=c("yellow", "green"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_manual(labels = c("No Reflux", "Reflux"), values=c("yellow", "green"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_manual(labels = c("No Reflux", "Reflux"), values=c("blue", "lightblue"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggsave("Auxin_GR.svg")
library(tidyverse)
ggplot(filter(reflux_melted, variable %in% c("Auxin.NoReflux", "Auxin.Reflux"))) + geom_smooth(aes(Time/100, value, color=variable), size=2) + xlab("Time (h)") + ylab("Auxin concentration") + theme(text = element_text(size=32), axis.text = element_text(size=24), legend.title = element_blank(), legend.key.width = unit(1,"cm"), legend.position=c(0.8, 0.8), legend.box.background = element_rect(color="black", size=1) ) + scale_color_manual(labels = c("No Reflux", "Reflux"), values=c("blue", "lightblue"))  + guides(color=guide_legend(override.aes=list(fill=NA)))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN relative abundance") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=24))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
theme_set(theme_bw())
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=32), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Relative position along the axis") + ylab("Growth Rate") + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("GR.svg")
ggsave("GR.svg", width=12, height=7)
ggsave("GR.svg")
ggsave("GR.svg", width=10, height=7)
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[3,1], linetype=2) +  xlab("Rel. position along the axis") + ylab("Cell Divisions (%)") + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("Divisions.svg", width=10, height=7)
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Auxin Conc. (nM/\u03BCm^2)"")  + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Auxin Conc. (nM/\u03BCm^2)")  + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BCm", ^2)))  + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BC", m^2)))  + theme(text = element_text(size=48), axis.text = element_text(size=32), ,  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BC", m^2)))  + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.text.y = element_text(size=28),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BC", m^2)))  + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=28),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BC", m^2)))  + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BC", m^2))))  + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Aucin conc. (nM/\u03BC", m^2, ")")))  + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))  + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("Auxin.svg")
ggsave("Auxin.svg", width=10, height=7)
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN relative abundance") + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN rel. abundance") + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PIN rel. abundance") + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=48),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=48),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(text = element_text(size=48), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("PINs.svg", width=10, height=7)
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(text = element_text(size=60), axis.text = element_text(size=32), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("PINs.svg", width=10, height=7)
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(axis.text = element_text(size=48), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(axis.text = element_text(size=40), axis.title.y = element_text(size=40),  panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(axis.text = element_text(size=40), axis.title.y = element_text(size=40),  axis.title.y = element_text(size=48), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(axis.text = element_text(size=40), axis.title.y = element_text(size=40),  axis.title.x = element_text(size=48), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") + theme(axis.text = element_text(size=40), axis.title.y = element_text(size=40),  axis.title.x = element_text(size=54), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("PINs.svg", width=11, height=7)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=60), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=54), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=42),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=36),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("GR.svg")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave("GR.svg")
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(2, 2, 2, 2, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=52), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(2, 2, 2, 2, "cm"))
ggsave("GR.svg")
ggsave("GR.svg", width=11, height=7.5)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=40), axis.text = element_text(size=48),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(2, 2, 2, 2, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(2, 2, 2, 2, "cm"))
ggsave("GR.svg", width=11, height=7.5)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(PINs_summary) + geom_line(aes(x=(1:nrow(PINs_summary))/100, y=mean), size=2)  + geom_ribbon(aes(x=(1:nrow(PINs_summary))/100, y=mean, ymin=mean-sd, ymax=mean+sd), fill="red", alpha=0.5)  + xlab("Time after cell division (h)") + ylab("PINs rel. abundance") +theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggsave("PINs.svg", width=11, height=7.5)
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))  theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(Auxin) + geom_line(aes(Position, Auxin), size=2) + geom_ribbon(aes(x=Position, ymin=Auxin-sd, ymax=Auxin+sd), alpha=0.5, fill="#2476fe") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab(expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))  +theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggsave("Auxin.svg", width=11, height=7.5)
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[3,1], linetype=2) +  xlab("Rel. position along the axis") + ylab("Cell Divisions (%)") +theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggsave("Division.svg", width=11, height=7.5)
ggplot(Divisions) +  geom_bar(aes(Position, Value), stat="identity", fill="lightblue", color="black") +  geom_vline(xintercept=Divisions[3,1], linetype=2) +  xlab("Rel. position along the axis") + ylab("Cell Divisions (%)") +theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(0, 1, 1, 0, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 0, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 0, 0, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(0, 0, 0, 0, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(0.5, 0, 0, 0, "cm"))
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(0, 0.5, 0, 0, "cm"))
ggsave("GR.svg", width=11, height=7.5)
ggplot(GR) + geom_line(aes(Position, GR), size=2) + geom_ribbon(aes(x=Position, ymin=GR-sd, ymax=GR+sd), alpha=0.5, fill="firebrick") + geom_vline(xintercept=GR[5,1], linetype=2) + xlab("Rel. position along the axis") + ylab("Growth Rate (\u03BCm/h)") + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggsave("GR.svg", width=11, height=7.5)
overflow <- read.csv("Auxin_OverFlow_200.csv")
head(overflow)
head(overflow, 100)
overflow <- read.csv("Auxin_OverFlow_200.csv")[-c(1:30),]
plot(overflow$Growth.Rate)
library(tidyverse)
ggplot(overflow) + geom_line(aes(User.Time, Growth.Rate))
ggplot(overflow) + geom_line(aes(User.Time, Growth.Rate)) + scale_y_continuous(name = "First Axis",sec.axis = sec_axis( trans=~.*10, name="Second Axis"))+  theme_ipsum()
ggplot(overflow) + geom_line(aes(User.Time, Growth.Rate)) + scale_y_continuous(name = "First Axis",sec.axis = sec_axis( trans=~.*10, name="Second Axis"))
ggplot(overflow) + geom_line(aes(User.Time, Growth.Rate)) + scale_y_continuous(name = "First Axis",sec.axis = sec_axis( trans=~.*1, name="Second Axis"))
ggplot(overflow) + geom_line(aes(User.Time, Growth.Rate))+geom_line(aes(User.Time,Average.Auxin.Cytoplasm )) + scale_y_continuous(name = "First Axis",sec.axis = sec_axis( trans=~.*1, name="Second Axis"))
theme_set(theme_bw())
ggplot(overflow) + geom_line(aes(User.Time, Growth.Rate))+geom_line(aes(User.Time,Average.Auxin.Cytoplasm )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
head(overflow)
strsplit(overflow$QC.position, " ")
as.numeric(strsplit(overflow$QC.position, " "))
sapply(strsplit(overflow$QC.position, " "), as.numeric)
sapply(strsplit(overflow$QC.position, " "), as.numeric) %>% t
a <- sapply(strsplit(overflow$QC.position, " "), as.numeric) %>% t
QC <- sapply(strsplit(overflow$QC.position, " "), as.numeric) %>% t
for(i in 2:nrow(QC)) print(QC[,i]/QC[,i-1])
for(i in 2:nrow(QC)) print(QC[i,2]/QC[i-1,2])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]/QC[i-1,2])
v
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/QC[i-1,2])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/QC[i-1,2]
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]/QC[i-1,2])
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/(QC[i-1,2]*0.03)
plot(v)
plot(v[1000:3500])
v <- data.frame(v[1000:3500])
a
v
ggplot(v) + geom_lines(1:2501, v)
ggplot(v) + geom_line(1:2501, v)
v <- data.frame(v=v[1000:3500])
ggplot(v) + geom_line(1:2501, v)
ggplot(v) + geom_line(aes(1:2501, v))
head(v)
v <- data.frame(v=v[1000:3500,1])
head(v)
ggplot(v) + geom_line(aes(1:2501, v))
ggplot(v) + geom_smooth(aes(1:2501, v))
v <- data.frame(v=v[,1])
ggplot(v) + geom_smooth(aes(1:nrow(v), v))
head(v)
ggplot(v) + geom_smooth(aes(1:nrow(v), v))
1:nrow(v)
ggplot(v) + geom_smooth(aes(1:nrow(v), v))
ggplot(v) + geom_line(aes(1:nrow(v), v))
v <- data.frame(GR=v[,1])
ggplot(v) + geom_line(aes(1:nrow(v), GR))
ggplot(v) + geom_smooth(aes(1:nrow(v), GR))
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/(QC[i-1,2])
v <- data.frame(GR=v[,1])
df <- data.frame(GR=v)
ggplot(v) + geom_smooth(aes(1:nrow(v), GR))
ggplot(df) + geom_smooth(aes(1:nrow(df), GR))
ggplot(df) + geom_line(aes(1:nrow(df), GR))
ggplot(df[1000:3500,]) + geom_line(aes(1:nrow(df[1000:3500,]), GR))
df[1000:3500,]
df <- data.frame(Time=1:length(v), GR=v)
ggplot(df[1000:3500,]) + geom_line(aes(Time, GR))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR), formula = spline(Time, 20))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR), formula = spline(GR, 20))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR), formula = spline(GR, bs=20))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR),  formula = y ~ splines::bs(x, 3), se = FALSE)
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR),  formula = y ~ splines::bs(x, 30), se = FALSE)
ggplot(df[1000:3500,]) + geom_line(aes(Time, GR))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR),  formula = y ~ splines::bs(x, 30), se = FALSE)
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR),  formula = y ~ splines::bs(x, 40), se = FALSE)
ggplot(df[1000:3500,]) + geom_line(aes(Time, GR))
ggplot(df[1:3500,]) + geom_line(aes(Time, GR))
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/(QC[i-1,2])
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/(QC[i-1,2]*0.03)
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/(QC[i-1,2]*0.01)
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/0.01)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- (QC[i,2]-QC[i-1,2])/0.01
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2])/0.01
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2])/0.03
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2])/(QC[i-1,2]*0.03)
plot(v)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2]*0.03)
plot(v)
plot(v[1000:4000,])
plot(v[1000:3500,])
plot(v[1000:4000])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2]*0.01)
plot(v[1000:4000])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2]*0.03)
plot(v[1000:4000])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2])
plot(v[1000:4000])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2]*0.03)
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2])
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2]*0.03)
plot(v[1000:4000])
plot(QC[,2])
plot(abs(QC[,2]))
3500/0.03
3500*0.03
1500*0.03
tail(df)
tail(auxin_o)
tail(overflow)
200*0.03
v <- vector(); for(i in 2:nrow(QC)) v[i] <- abs(QC[i,2]-QC[i-1,2]) / abs(QC[i-1,2]*0.03)
length(v)
nrow(overflow)
v[1] <- 0
data.frame(GR=v, Auxin=overflow$Average.Auxin.Cytoplasm)
df <- data.frame(GR=v, Auxin=overflow$Average.Auxin.Cytoplasm)
ggplot(df) + geom_line(aes(sdsddUser.Time, Growth.Rate))+geom_line(aes(User.Time,Average.Auxin.Cytoplasm )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
df <- data.frame(Time=overflow$User.Time,  GR=v, Auxin=overflow$Average.Auxin.Cytoplasm)
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~./10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin/10 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*100, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1000:4000,]) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/100)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1000:4000,]) + geom_smooth(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1000:4000,]) + geom_line(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1000:4000,]) + geom_smooth(aes(Time, GR))+geom_line(aes(Time,Auxin/100 )) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/100)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/100)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1000:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[500:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[500:3500,]) + geom_line(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[500:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[500:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 20), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[500:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 10), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[500:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df[1:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(0, 150)
ggplot(df[1:3500,]) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(0, 150)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(40, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(30, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
df <- data.frame(Time=overflow$User.Time,  GR=overflow$Growth.Rate, Auxin=overflow$Average.Auxin.Cytoplasm)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(1, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/200)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin/100)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*10, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), se = FALSE)+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50))+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30))+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50))+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 30))+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50))+geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin)) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="blue") + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="blue", size=2) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9f", size=2) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick", size=2) + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(10, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name="Auxin Conc.")) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + theme(text = element_text(size=48), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + theme(text = element_text(size=40), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)") + theme(text = element_text(size=40), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)", color="blue") + theme(text = element_text(size=40), axis.text = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)", color="blue") + theme(text = element_text(size=40), axis.text = element_text(size=40, color="blue"),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)", color="blue") + theme(text = element_text(size=40), axis.text = element_text(size=40, colour="blue"),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)") + theme(text = element_text(size=40), axis.text = element_text(size=40, colour="blue"),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)") + theme(text = element_text(size=40), axis.title.y = element_text(size=40, colour="blue"),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggplot(df) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)") + theme(text = element_text(size=40), axis.title.y = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
ggsave("Auxin_overflow.svg")
library(tidyverse)
ggplot(df[df$Time > 40,] %>% mutate(Time=Time-min(Time))) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)") + theme(text = element_text(size=40), axis.title.y = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm")) + xlim(20, 110)
theme_set(theme_bw())
ggplot(df[df$Time > 40,] %>% mutate(Time=Time-min(Time))) + geom_smooth(aes(Time, GR),formula = y ~ splines::bs(x, 50), col="firebrick") + geom_line(aes(Time,Auxin), color="#1d5ec9", size=2) + scale_y_continuous(name = "Growth Rate (\u03BCm/h)",sec.axis = sec_axis( trans=~.*1, name=expression(paste("Auxin conc. (nM/\u03BC", m^2, ")")))) + xlab("Time (h)") + theme(text = element_text(size=40), axis.title.y = element_text(size=40),   panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), plot.margin = margin(1, 1, 1, 1, "cm"))
ggsave("Auxin_overflow.svg")
install.packages("svglite")
install.packages("svglite")
install.packages("svglite")
ggsave("Auxin_overflow.svg")
